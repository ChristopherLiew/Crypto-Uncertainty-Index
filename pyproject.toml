[tool.poetry]
name = "crypto-uncertainty-index"
version = "0.1.0"
description = "Cryptocurrency Price & Policy Uncertainty Index with NLP and Reddit Data"
authors = ["christopher.liew <christopher.liew@bytedance.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.9"
pandas = "^1.3.5"
pandas-datareader = "^0.10.0"
numpy = "<1.22"
darts = "^0.16.1"
pyarrow = "^6.0.1"
nltk = "^3.6.7"
spacy = "^3.2.1"
transformers = "^4.15.0"
gensim = "<4.0.0"
top2vec = {extras = ["sentence_transformers"], version = "^1.0.26"}
wandb = "^0.12.10"
pyLDAvis = "^3.3.1"
emot = "^3.1"
scikit-learn = "^1.0.2"
xgboost = "^1.5.2"
lightgbm = "^3.3.2"
hdbscan = "^0.8.27"
prophet = "^1.0.1"
altair = "^4.2.0"
pmaw = "^2.1.2"
snscrape = "^0.4.3"
elasticsearch = "^7.16.3"
elasticsearch-dsl = "^7.4.0"
SQLAlchemy = "^1.4.29"
psycopg2 = "^2.9.3"
pydantic = "<1.9.0"
rich = "^11.0.0"
typer = {extras = ["all"], version = "^0.4.0"}
ipykernel = "^6.7.0"
jupyter = "^1.0.0"
arrow = "^1.2.1"
tqdm = "^4.62.3"
black = {extras = ["jupyter"], version = "^22.1.0"}
dacite = "^1.6.0"
requests = "^2.27.1"
toml = "^0.10.2"
yfinance = "^0.1.70"
click-spinner = "^0.1.10"
llvmlite = "^0.38.0"
xmltodict = "^0.12.0"
matplotlib = "^3.5.1"
Pillow = "9.0.0"
polars = "^0.13.3"
jupyterlab = "^3.2.9"
tokenizers = "=0.11.4"
isoweek = "^1.3.3"
interrogate = "^1.5.0"
datasets = "^1.18.3"
ray = "^1.10.0"
little-mallet-wrapper = "^0.5.0"
shap = "^0.40.0"
emoji = "^1.6.3"
gradio = "^2.8.10"
torch = "^1.11.0"
torchmetrics = "^0.7.2"
sqlfluff = "^0.11.0"
arch = "^5.1.0"

[tool.poetry.scripts]
ucry-cli = "cli:app"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
flake8 = "^4.0.1"
pre-commit = "^2.17.0"
pdoc3 = "^0.10.0"

[tool.sqlfluff.core]
# verbose is an integer (0-2) indicating the level of log output
verbose = 0
# Turn off color formatting of output
nocolor = false
# Supported dialects https://docs.sqlfluff.com/en/stable/dialects.html
# Or run 'sqlfluff dialects'
dialect = "postgres"
# One of [raw|jinja|python|placeholder]
templater = "python"
# The depth to recursively parse to (0 for unlimited)
recurse = 0
# Below controls SQLFluff output, see max_line_length for SQL output
output_line_length = 80
# Number of passes to run before admitting defeat
runaway_limit = 10
# Ignore linting errors found within sections of code coming directly from
# templated code (e.g. from within Jinja curly braces. Note that it does not
# ignore errors from literal code found within template loops.
ignore_templated_areas = true
# can either be autodetect or a valid encoding e.g. utf-8, utf-8-sig
encoding = "utf-8"
# Ignore inline overrides (e.g. to test if still required)
disable_noqa = false
# Comma separated list of file extensions to lint
# NB: This config will only apply in the root folder
sql_file_exts = ".sql,.sql.j2,.dml,.ddl"
# Allow fix to run on files, even if they contain parsing errors
# Note altering this is NOT RECOMMENDED as can corrupt SQL
fix_even_unparsable = false

[tool.sqlfluff.indentation]
# See https://docs.sqlfluff.com/en/stable/indentation.html
indented_joins = false
indented_ctes = false
indented_using_on = true
template_blocks_indent = true

# Some rules can be configured directly from the config common to other rules
[tool.sqlfluff.rules]
tab_space_size = 4
max_line_length = 80
indent_unit = "space"
comma_style = "trailing"
allow_scalar = true
single_table_references = "consistent"
unquoted_identifiers_policy = "all"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
